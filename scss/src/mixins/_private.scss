@use 'sass:math';


// Placeholder
@mixin _placeholder
{
    &::placeholder               {@content}
    &::-webkit-input-placeholder {@content}
    &:-moz-placeholder           {@content}
    &::-moz-placeholder          {@content}
    &:-ms-input-placeholder      {@content}  
}

@mixin _webkitScrollbars()
{
    @supports (scrollbar-width: auto)
    {
        scrollbar-color: var(--fbx-webkit-scrollbars-thumbcolor) var(--fbx-webkit-scrollbars-trackcolor);
        scrollbar-width: var(--fbx-webkit-scrollbars-thickness);
    }

    @supports selector(::-webkit-scrollbar)
    {
        &::-webkit-scrollbar-thumb
        {
            background: var(--fbx-webkit-scrollbars-thumbcolor);
            border-radius: 20px;
        }
        &::-webkit-scrollbar-track
        {
            background: var(--fbx-webkit-scrollbars-trackcolor);
        }
        &::-webkit-scrollbar
        {
            max-width: var(--fbx-webkit-scrollbars-thickness-px);
            max-height: var(--fbx-webkit-scrollbars-thickness-px);
        }
        &:hover::-webkit-scrollbar-thumb
        {
            background: var(--fbx-webkit-scrollbars-thumbcolor-hover);
        }
        &:hover::-webkit-scrollbar-track
        {
            background: var(--fbx-webkit-scrollbars-trackcolor-hover);
        }
        &:active::-webkit-scrollbar-thumb
        {
            background: var(--fbx-webkit-scrollbars-thumbcolor-active);
        }
        &:active::-webkit-scrollbar-track
        {
            background: var(--fbx-webkit-scrollbars-trackcolor-active);
        }
    }
}

// Color mixing
@function _lighter($color, $percentage)
{
    @return mix(white, $color, $percentage);
}
@function _darker($color, $percentage)
{
    @return mix(black, $color, $percentage);
}

// Utility
@function _minusPercent($value, $percentage)
{
    $diff: $value * math.div($percentage, 100);
    @return $value - $diff;
}
@function _addPercent($value, $percentage)
{
    $diff: $value * math.div($percentage, 100);
    @return $value + $diff;
}

// Colors
@function _to-rgb-vals($color)
{
    @return red($color) + ", " + green($color) + ", " + blue($color);
}
@function _str-replace($string, $search, $replace: '')
{
    $index: str-index($string, $search);
  
    @if $index
    {
        @return str-slice($string, 1, $index - 1) + $replace + _str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
  
    @return $string;
}
@function _color-name-from-var($colorVar)
{
    @return 
    _str-replace(
        _str-replace(
            _str-replace(
                _str-replace(
                    _str-replace(
                        _str-replace(
                            _str-replace(
                                _str-replace(
                                    _str-replace($colorVar, ')', ''),
                                'var(--', ''),
                            'fbx-', ''),
                        '-rgb', ''),
                    '--', ''),
                'color-', ''),
            '(', ''),
        ',', ''),
   ' ', '');
}

@function _var-to-str($cssVar)
{
    @return 
    _str-replace(
        _str-replace(
            _str-replace(
                _str-replace($cssVar, ')', ''),
            'var(--', ''),  
        ',', ''),
    ' ', '');
}

// Array object helpers
@function _map-keys($map)
{
    $ret : ();

    @each $key, $value in $map
    {
        $ret: append($ret, $key);
    }

    @return $ret;
}

@function _list_merge($list1, $list2)
{
    $ret : ();

    @each $val in $list1
    {
        $ret: append($ret, $val);
    }
    
    @each $val in $list2
    {
        $ret: append($ret, $val);
    }

    @return $ret;
}

