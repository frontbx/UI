// Breakpoints
@mixin media-breakpoint-up($name)
{
    $width: map-get($breakpoints, $name);
    @if $width
    {
        @media (min-width: $width)
        {
            @content;
        }
    }
    @else
    {
        @media (min-width: $name)
        {
            @content;
        }
    }
}
@mixin media-breakpoint-down($name)
{
    $width: map-get($breakpoints, $name);
    @if $width
    {
        @media (max-width: $width)
        {
            @content;
        }
    }
    @else
    {
        @media (max-width: $name)
        {
            @content;
        }
    }
}

// Retina
@mixin media-retina($ratio : 1.25)
{
    @media only screen and (-o-min-device-pixel-ratio: $ratio),
       only screen and (-webkit-min-device-pixel-ratio: $ratio),
       only screen and (min--moz-device-pixel-ratio: $ratio),
       only screen and (min-device-pixel-ratio: $ratio),
       only screen and (min-resolution: #{$ratio}dppx)
    {
        @content;
    }
}


// Icon
@mixin font-icon
{
    font-family: var(--fa-style-family, "Font Awesome 6 Free");
    font-weight: var(--fa-style, 900);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: var(--fa-display, inline-block);
    font-style: normal;
    font-variant: normal;
    line-height: 1;
    text-rendering: auto;
}

// Raised
@mixin raised($level : 1)
{
    @if $level == 1
    {
        box-shadow: $raised-level-one;
    }
    @else if $level == 2
    {
        box-shadow: $raised-level-two;
    }
    @else if $level == 3
    {
        box-shadow: $raised-level-three;
    }
    @else if $level == 4
    {
        box-shadow: $raised-level-four;
    }
}

@mixin raise($varname, $level : 1, $color: #000000)
{
    @if $level == 1
    {
        #{$varname} : rgba(_darker($color, 30%), 0.2) 0px 2px 1px -1px, rgba(_darker($color, 30%), 0.14) 0px 1px 1px 0px, rgba(_darker($color, 30%), 0.12) 0px 1px 3px 0px;
    }
    @else if $level == 2
    {
        #{$varname} : rgba(_darker($color, 30%), 0.2) 0px 3px 1px -2px, rgba(_darker($color, 30%), 0.14) 0px 2px 2px 0px, rgba(_darker($color, 30%), 0.12) 0px 1px 5px 0px;
    }
    @else if $level == 3
    {
        #{$varname}: rgba(_darker($color, 30%), 0.2) 0px 3px 3px -2px, rgba(_darker($color, 30%), 0.14) 0px 3px 4px 0px, rgba(_darker($color, 30%), 0.12) 0px 1px 8px 0px;
    }
    @else if $level == 4
    {
        #{$varname}: 0 2px 16px 0 rgba(_darker($color, 30%), 0.3);
    }
}

// Unstyled button
@mixin button-unstyled()
{
    background-color: transparent;
    border: none;
    outline: none;
    cursor: pointer;

    &:hover,
    &.hover,
    &:active,
    &.active
    {
        background-color: transparent;
        border: none;
        outline: none;
    }
}

// Font smoothing
@mixin font-smooth()
{
    @if $font-smoothing
    {
      text-rendering: optimizeLegibility;
      font-smoothing: antialiased;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
}

// Text ellipsis
@mixin ellipsis
{
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Clearfix
@mixin clearfix
{
    &:after
    {
        content: "";
        display: table;
        clear: both;
    }
}
